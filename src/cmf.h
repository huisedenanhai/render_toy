#pragma once
#include "defs.h"
#include <vector_functions.h>
#include <vector_types.h>

// CIE 1931 2-deg, XYZ CMFs modified by Judd (1951) and Vos (1978)
// http://www.cvrl.org/database/data/cmfs/ciexyzjv.csv
HOST_DEVICE_DATA size_t CMF_WaveLengthCount = 90;
HOST_DEVICE_DATA float CMF_MinWaveLength = 380.0f;
HOST_DEVICE_DATA float CMF_MaxWaveLength = 825.0f;
HOST_DEVICE_DATA float CMF_WaveLengthStride = 5.0f;

HOST_DEVICE_DATA float CMF_WaveLength[90] = {
    380, 385, 390, 395, 400, 405, 410, 415, 420, 425, 430, 435, 440, 445, 450,
    455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525,
    530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, 600,
    605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675,
    680, 685, 690, 695, 700, 705, 710, 715, 720, 725, 730, 735, 740, 745, 750,
    755, 760, 765, 770, 775, 780, 785, 790, 795, 800, 805, 810, 815, 820, 825};

HOST_DEVICE_DATA float CMF_X[90] = {
    0.0026899,   0.0053105,   0.010781,    0.020792,    0.037981,    0.063157,
    0.099941,    0.15824,     0.22948,     0.28108,     0.31095,     0.33072,
    0.33336,     0.31672,     0.28882,     0.25969,     0.23276,     0.20999,
    0.17476,     0.13287,     0.091944,    0.056985,    0.031731,    0.014613,
    0.0048491,   0.0023215,   0.0092899,   0.029278,    0.063791,    0.11081,
    0.16692,     0.22768,     0.29269,     0.36225,     0.43635,     0.51513,
    0.59748,     0.68121,     0.76425,     0.84394,     0.91635,     0.97703,
    1.023,       1.0513,      1.055,       1.0362,      0.99239,     0.92861,
    0.84346,     0.73983,     0.63289,     0.53351,     0.44062,     0.35453,
    0.27862,     0.21485,     0.16161,     0.1182,      0.085753,    0.063077,
    0.045834,    0.032057,    0.022187,    0.015612,    0.011098,    0.0079233,
    0.0056531,   0.0040039,   0.0028253,   0.0019947,   0.0013994,   0.0009698,
    0.00066847,  0.00046141,  0.00032073,  0.00022573,  0.00015973,  0.00011275,
    0.000079513, 0.000056087, 0.000039541, 0.000027852, 0.000019597, 0.00001377,
    9.67e-6,     6.7918e-6,   4.7706e-6,   3.355e-6,    2.3534e-6,   1.6377e-6};

HOST_DEVICE_DATA float CMF_Y[90] = {
    0.0002,    0.00039556, 0.0008,      0.0015457,   0.0028,    0.0046562,
    0.0074,    0.011779,   0.0175,      0.022678,    0.0273,    0.032584,
    0.0379,    0.042391,   0.0468,      0.052122,    0.06,      0.072942,
    0.09098,   0.11284,    0.13902,     0.16987,     0.20802,   0.25808,
    0.323,     0.4054,     0.503,       0.60811,     0.71,      0.7951,
    0.862,     0.91505,    0.954,       0.98004,     0.99495,   1.0001,
    0.995,     0.97875,    0.952,       0.91558,     0.87,      0.81623,
    0.757,     0.69483,    0.631,       0.56654,     0.503,     0.44172,
    0.381,     0.32052,    0.265,       0.21702,     0.175,     0.13812,
    0.107,     0.081652,   0.061,       0.044327,    0.032,     0.023454,
    0.017,     0.011872,   0.00821,     0.0057723,   0.004102,  0.0029291,
    0.002091,  0.0014822,  0.001047,    0.00074015,  0.00052,   0.00036093,
    0.0002492, 0.00017231, 0.00012,     0.00008462,  0.00006,   0.000042446,
    0.00003,   0.00002121, 0.000014989, 0.000010584, 7.4656e-6, 5.2592e-6,
    3.7028e-6, 2.6076e-6,  1.8365e-6,   1.295e-6,    9.1092e-7, 6.3564e-7};

HOST_DEVICE_DATA float CMF_Z[90] = {
    0.01226,     0.024222,    0.04925,     0.095135,    0.17409,
    0.29013,     0.46053,     0.73166,     1.0658,      1.3146,
    1.4672,      1.5796,      1.6166,      1.5682,      1.4717,
    1.374,       1.2917,      1.2356,      1.1138,      0.9422,
    0.75596,     0.5864,      0.44669,     0.34116,     0.26437,
    0.20594,     0.15445,     0.10918,     0.076585,    0.056227,
    0.041366,    0.029353,    0.020042,    0.013312,    0.0087823,
    0.0058573,   0.0040493,   0.0029217,   0.0022771,   0.0019706,
    0.0018066,   0.0015449,   0.0012348,   0.0011177,   0.00090564,
    0.00069467,  0.00042885,  0.00031817,  0.00025598,  0.00015679,
    0.000097694, 0.000068944, 0.000051165, 0.000036016, 0.000024238,
    0.000016915, 0.000011906, 8.1489e-6,   5.6006e-6,   3.9544e-6,
    2.7912e-6,   1.9176e-6,   1.3135e-6,   9.1519e-7,   6.4767e-7,
    4.6352e-7,   3.3304e-7,   2.3823e-7,   1.7026e-7,   1.2207e-7,
    8.7107e-8,   6.1455e-8,   4.3162e-8,   3.0379e-8,   2.1554e-8,
    1.5493e-8,   1.1204e-8,   8.0873e-9,   5.834e-9,    4.211e-9,
    3.0383e-9,   2.1907e-9,   1.5778e-9,   1.1348e-9,   8.1565e-10,
    5.8626e-10,  4.2138e-10,  3.0319e-10,  2.1753e-10,  1.5476e-10};

// see https://colorcalculations.wordpress.com/rgb-color-spaces/#RGBspaces
HOST_DEVICE_DATA float XYZ_To_sRGB_Matrix[3][3] = {
    {3.239886, -1.536869, -0.498444},
    {-0.967675, 1.872930, 0.041488},
    {0.056595, -0.207515, 1.075305}};

HOST_DEVICE_DATA float sRGB_To_XYZ_Matrix[3][3] = {
    {0.412529, 0.358164, 0.177404},
    {0.212710, 0.716328, 0.070961},
    {0.019337, 0.119388, 0.934326}};

HOST_DEVICE_INLINE float3 xyz_to_srgb(float3 xyz) {
  float x = xyz.x;
  float y = xyz.y;
  float z = xyz.z;
  auto m = XYZ_To_sRGB_Matrix;
  return make_float3(m[0][0] * x + m[0][1] * y + m[0][2] * z,
                     m[1][0] * x + m[1][1] * y + m[1][2] * z,
                     m[2][0] * x + m[2][1] * y + m[2][2] * z);
}

HOST_DEVICE_INLINE float3 srgb_to_xyz(float3 srgb) {
  float x = srgb.x;
  float y = srgb.y;
  float z = srgb.z;
  auto m = sRGB_To_XYZ_Matrix;
  return make_float3(m[0][0] * x + m[0][1] * y + m[0][2] * z,
                     m[1][0] * x + m[1][1] * y + m[1][2] * z,
                     m[2][0] * x + m[2][1] * y + m[2][2] * z);
}

// fit CIE 1931 CMF with two normal dist with wavelength normalized in range
// [380, 825]
HOST_DEVICE_DATA float CMF_FitA1 = 0.622014;
HOST_DEVICE_DATA float CMF_FitMean1 = 0.443812;
HOST_DEVICE_DATA float CMF_FitStdVar1 = 0.0990865;
HOST_DEVICE_DATA float CMF_FitA2 = 0.379585;
HOST_DEVICE_DATA float CMF_FitMean2 = 0.146927;
HOST_DEVICE_DATA float CMF_FitStdVar2 = 0.0557573;
